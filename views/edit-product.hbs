<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Product</title>
    <link rel="stylesheet" href="/css/navbar.css">
    <link rel="stylesheet" href="/css/register-product.css">
    <!-- Add SweetAlert CSS -->
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11.5.4/dist/sweetalert2.min.css" rel="stylesheet">

    <!-- Importing Poppins font -->
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&display=swap" rel="stylesheet">

    <style>
        body::before {
            content: "";
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: url("images/background.jpg") no-repeat center center fixed;
            background-size: cover;
            opacity: 0.1;
            /* Adjust this value to set the opacity (0.1 to 1) */
            z-index: -1;
            /* Ensure it stays behind the content */
        }
    </style>

</head>

<body>
    {{> navbar}}
    <div class="container">

        <button class="product-list-btn" onclick="window.location.href='/product-list'">Product List</button>
        <!-- Button to Product List -->

        <h4>Edit Product</h4>

        <!-- User Info Section -->
        <div class="user-info">
            <p style="color: rgb(74, 74, 74); margin-bottom:10px; text-align:center"><strong>Welcome,
                    {{userName}}!</strong> You are editing the product details for your account.</p>
        </div>

        <div class="section">
            <form id="product-form" class="form-row">
                <div class="form-group">
                    <label for="product-id">Product ID</label>
                    <input type="text" id="product-id" name="product-id" required readonly>
                </div>

                <div class="form-group">
                    <label for="item-code">Item Code</label>
                    <input type="text" id="item-code" name="item-code" required>
                </div>

                <div class="form-group">
                    <label for="product-name">Product Name</label>
                    <input type="text" id="product-name" name="product-name" required>
                </div>

                <div class="form-group">
                    <label for="hsn-code">HSN Code</label>
                    <input type="text" id="hsn-code" name="hsn-code" required>
                </div>

                <div class="form-group">
                    <label for="rate">Rate</label>
                    <input type="number" id="rate" name="rate" required>
                </div>

                <button type="submit">Update Product</button>
            </form>
        </div>

    </div>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.5.4/dist/sweetalert2.all.min.js"></script>
    <script>
        // Fetch product data and pre-fill the form when the page loads 
        document.addEventListener('DOMContentLoaded', async () => {
            const urlParams = new URLSearchParams(window.location.search);
            const productId = urlParams.get('productId');  // Get productId from the URL query string

            if (!productId) {
                alert('Product ID is missing!');
                window.location.href = '/product-list'; // Redirect to product list if no ID
                return;
            }

            try {
                const response = await fetch(`/get-product/${productId}`);
                const data = await response.json();

                if (data.success) {
                    const product = data.product;

                    // Populate form fields with the fetched product data
                    document.getElementById('product-id').value = product.productId;
                    document.getElementById('item-code').value = product.itemCode;
                    document.getElementById('product-name').value = product.productName;
                    document.getElementById('hsn-code').value = product.hsnCode;
                    document.getElementById('rate').value = product.rate;
                } else {
                    alert('Error fetching product details');
                    window.location.href = '/product-list'; // Redirect if product not found
                }
            } catch (error) {
                console.error('Error fetching product details:', error);
                alert('An error occurred while fetching product details.');
            }
        });




        // Handle form submission
        document.getElementById('product-form').addEventListener('submit', async (event) => {
            event.preventDefault();

            const productId = document.getElementById('product-id').value;
            const itemCode = document.getElementById('item-code').value;
            const productName = document.getElementById('product-name').value;
            const hsnCode = document.getElementById('hsn-code').value;
            const rate = parseFloat(document.getElementById('rate').value);

            const productData = {
                productId,
                itemCode,
                productName,
                hsnCode,
                rate
            };

            try {
                const response = await fetch(`/update-product/${productId}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ itemCode, productName, hsnCode, rate }),
                });


                const data = await response.json();
                if (data.success) {
                    Swal.fire({
                        title: 'Success!',
                        text: `Product updated successfully. Product ID: ${data.product.productId}`,
                        icon: 'success',
                        timer: 1500,
                        showConfirmButton: false,
                    }).then(() => {
                        window.location.href = '/product-list';
                    });
                } else {
                    Swal.fire({
                        title: 'Error!',
                        text: data.message || 'Failed to update the product.',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                }
            } catch (error) {
                console.error('Error updating product:', error);
                Swal.fire({
                    title: 'Error!',
                    text: 'Something went wrong. Please try again later.',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        });
    </script>
</body>

</html>