<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Verify OTP</title>
    <link rel="stylesheet" href="/css/styles.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet">
    <style>
        body::before {
            content: "";
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: url("images/background.jpg") no-repeat center center fixed;
            background-size: cover;
            opacity: 0.1;
            /* Adjust this value to set the opacity (0.1 to 1) */
            z-index: -1;
            /* Ensure it stays behind the content */
        }

        .resend-container {
            margin-top: 10px;
            text-align: center;
        }

        .resend-container button {
            background-color: transparent;
            border: none;
            color: #007bff;
            font-size: 14px;
            cursor: pointer;
            text-decoration: underline;
        }

        .resend-container button:disabled {
            color: gray;
            cursor: not-allowed;
        }
    </style>
</head>

<body>
    <div class="container">
        <div class="form-container">
            <img src="images/logo_r.png" alt="InvoiceHub Logo" class="logo">
            <h2>Verify OTP</h2>
            <form id="verifyForm">
                <div class="input-field">
                    <input type="text" id="otp" name="otp" placeholder="Enter OTP" required>
                </div>
                <button type="submit">Verify OTP</button>
            </form>
            <div class="resend-container">
                <button id="resendButton" disabled>Resend OTP (Wait <span id="timer">30</span>s)</button>
            </div>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        const resendButton = document.getElementById('resendButton');
        const timerSpan = document.getElementById('timer');
        let countdown = 30; // Set countdown duration in seconds

        // Initialize countdown timer for resend button
        const startCountdown = () => {
            countdown = 30;
            resendButton.disabled = true;
            timerSpan.textContent = countdown;

            const interval = setInterval(() => {
                countdown--;
                timerSpan.textContent = countdown;

                if (countdown <= 0) {
                    clearInterval(interval);
                    resendButton.disabled = false;
                    timerSpan.textContent = '';
                    resendButton.textContent = 'Resend OTP';
                }
            }, 1000);
        };

        // Trigger countdown on page load
        startCountdown();

        // Add event listener for form submission
        document.getElementById('verifyForm').addEventListener('submit', async (event) => {
            event.preventDefault();

            const otp = document.getElementById('otp').value;
            const params = new URLSearchParams(window.location.search);
            const email = params.get('email');

            try {
                const response = await fetch('/verifyOTP', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ email, otp })
                });

                if (response.ok) {
                    const result = await response.json();
                    swal.fire({
                        icon: 'success',
                        title: 'Verification Successful',
                        text: result.msg,
                    }).then(() => {
                        window.location.href = `/change-pass-without-login?email=${encodeURIComponent(email)}`;
                    });
                } else {
                    const error = await response.json();
                    swal.fire({
                        icon: 'error',
                        title: 'Verification Failed',
                        text: error.msg || 'Invalid OTP',
                    });
                }
            } catch (error) {
                console.error('Error:', error);
                swal.fire({
                    icon: 'error',
                    title: 'Unexpected Error',
                    text: 'An unexpected error occurred. Please try again.',
                });
            }
        });

        // Add event listener for resend button
        resendButton.addEventListener('click', async () => {
            const params = new URLSearchParams(window.location.search);
            const email = params.get('email');

            try {
                resendButton.disabled = true;
                resendButton.textContent = 'Resending...';

                const response = await fetch('/resendOTP', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ email })
                });

                if (response.ok) {
                    const result = await response.json();
                    swal.fire({
                        icon: 'success',
                        title: 'OTP Resent',
                        text: result.msg,
                    });
                } else {
                    const error = await response.json();
                    swal.fire({
                        icon: 'error',
                        title: 'Failed to Resend OTP',
                        text: error.msg || 'Please try again later.',
                    });
                }
            } catch (error) {
                console.error('Error:', error);
                swal.fire({
                    icon: 'error',
                    title: 'Unexpected Error',
                    text: 'An unexpected error occurred. Please try again.',
                });
            } finally {
                startCountdown();
            }
        });
    </script>
</body>

</html>