<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Bills</title>
    <link rel="stylesheet" href="/css/navbar.css">
    {{!--
    <link rel="stylesheet" href="/css/bill-list.css"> --}}
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.0/dist/sweetalert2.min.css">

    <!-- Import Poppins font -->
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&display=swap" rel="stylesheet">

    <style>
        body {
            font-family: 'Poppins', sans-serif;
            margin: 0;
            padding: 0;
            background-color: #F5EDED;
        }

        .container {
            max-width: 90%;
            margin: 30px auto;
            padding: 20px;
            background-color: #E2DAD6;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            position: relative;
        }

        .generate-bill-btn {
            position: absolute;
            top: 20px;
            left: 20px;
            background-color: #6482AD;
            color: white;
            border: none;
            padding: 10px 15px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 14px;
            transition: background-color 0.3s ease;
        }

        .generate-bill-btn:hover {
            background-color: #516F8A;
        }

        h1 {
            color: #6482AD;
            text-align: center;
            font-weight: 600;
            margin-bottom: 20px;
        }

        .filters-container {
            padding: 15px;
            background-color: #FFFFFF;
            border-radius: 10px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            margin-bottom: 20px;
            width: 70%;
            margin: auto;
        }

        .filters {
            display: flex;
            justify-content: space-evenly;
            flex-wrap: wrap;
            gap: 10px;
        }

        .filters select,
        .filters input,
        .filters button {
            padding: 8px 12px;
            border-radius: 5px;
            border: 1px solid #ccc;
            font-size: 14px;
        }

        .filters button {
            background-color: #6482AD;
            color: white;
            border: none;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        .filters button:hover {
            background-color: #516F8A;
        }

        .table-container {
            overflow-x: auto;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            border-radius: 10px;
            overflow: hidden;
            background-color: #ffffff;
        }

        th,
        td {
            padding: 15px 12px;
            text-align: left;
            border-bottom: 1px solid #ddd;
            font-size: 16px;
        }

        th:not(:last-child),
        td:not(:last-child) {
            border-right: 2px solid #ddd;
        }

        th {
            background-color: #6482AD;
            color: white;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        tr:nth-child(even) {
            background-color: #F9F9F9;
        }

        tr:hover {
            background-color: #F1F4F8;
        }

        td {
            color: #555;
            word-wrap: break-word;
        }

        .no-products {
            text-align: center;
            color: #6482AD;
            font-size: 18px;
            margin-top: 20px;
        }

        button {
            background-color: #6482AD;
            color: white;
            border: none;
            padding: 8px 12px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 14px;
            transition: background-color 0.3s ease;
        }

        button:hover {
            background-color: #516F8A;
        }

        body::before {
            content: "";
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: url("images/background.jpg") no-repeat center center fixed;
            background-size: cover;
            opacity: 0.1;
            z-index: -1;
        }

        @media (max-width: 768px) {
            .filters-container {
                width: 90%;
            }

            .filters {
                flex-direction: column;
                align-items: center;
                gap: 15px;
            }

            .generate-bill-btn {
                font-size: 12px;
                padding: 8px 10px;
                top: 10px;
                left: 10px;
            }

            th,
            td {
                font-size: 14px;
                padding: 10px;
            }

            table {
                font-size: 12px;
            }
        }

        @media (max-width: 480px) {
            h1 {
                font-size: 22px;
            }

            th,
            td {
                font-size: 12px;
                padding: 8px;
            }

            .filters select,
            .filters input,
            .filters button {
                width: 100%;
                text-align: center;
            }

            .generate-bill-btn {
                font-size: 10px;
                padding: 6px 8px;
            }

            .container {
                padding: 10px;
            }
        }
    </style>
    <style>
        /* Reduce size of all SweetAlert2 icons except success */
        .swal2-icon.swal2-warning,
        .swal2-icon.swal2-info,
        .swal2-icon.swal2-question {
            width: 50px !important;
            /* Adjust size as needed */
            height: 50px !important;
            /* Adjust size as needed */
            font-size: 28px !important;
            /* Adjust icon font size */
        }

        /* Keep success icon default size */
        .swal2-icon.swal2-success {
            width: 80px;
            /* Default size */
            height: 80px;
            /* Default size */
        }
    </style>


</head>

<body>
    {{> navbar}}
    <div class="container">
        <!-- Generate Bill Button -->
        <button class="generate-bill-btn" onclick="window.location.href='/generate-non-gst-bill';">Generate Non GST Bill</button>

        <!-- Page Title -->
        <h1>User Non GST Bills</h1>

        <!-- Filters Section -->
        {{!-- <div class="filters-container">
            <div class="filters">
                <input type="date" id="start-date" placeholder="Start Date">
                <input type="date" id="end-date" placeholder="End Date">
                <input type="text" id="customer-name" placeholder="Customer Name">
                <select id="bill-type">
                    <option value="">All Types</option>
                    <option value="GST">GST</option>
                    <option value="non-GST">Non-GST</option>
                </select>
                <button onclick="applyFilters()">Apply Filters</button>
            </div>
        </div> --}}

        <!-- Table for displaying bills -->
        <div class="table-container">
            <table id="bills-table">
                <thead>
                    <tr>
                        <th>Invoice No</th>
                        <th>Challan No</th>
                        <th>Date</th>
                        <th>Customer</th>
                        <th>Total Amount</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- Dynamic rows populated via JavaScript -->
                </tbody>
            </table>

            <!-- No records found message -->
            <div id="no-records" class="no-products" style="display: none;">
                No bills found.
            </div>
        </div>
    </div>

    <script>
        const swalConfig = {
            width: '400px', // Uniform popup width
            customClass: {
                icon: 'custom-icon', // Custom class for smaller icons
                confirmButton: 'swal2-styled swal2-confirm', // Apply confirm button style
                cancelButton: 'swal2-styled swal2-cancel',   // Apply cancel button style
            },
            buttonsStyling: false, // Disable default SweetAlert2 button styling

        };

        // Fetch and display bills with optional filters
        async function fetchBills(filters = {}) {
            try {
                const queryParams = new URLSearchParams(filters).toString();
                const response = await fetch(`/get-non-gst-bills?${queryParams}`);

                if (!response.ok) {
                    Swal.fire({
                        ...swalConfig,
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Error fetching bills. Please try again later!',
                    });
                    return;
                }

                const data = await response.json();
                const tbody = document.querySelector('#bills-table tbody');
                const noRecordsDiv = document.querySelector('#no-records');

                if (data.success && data.bills.length > 0) {
                    tbody.innerHTML = '';
                    noRecordsDiv.style.display = 'none';
                    data.bills.forEach((bill) => {
                        const formattedDate = new Date(bill.date).toLocaleDateString('en-GB'); // Formats to dd/mm/yyyy
                        const [day, month, year] = formattedDate.split('/');
                        const displayDate = `${day}-${month}-${year}`; // Change to dd-mm-yyyy format

                        const row = document.createElement('tr');
                        row.innerHTML = `
                    <td>${bill.invoiceNo}</td>
                    <td>${bill.challanNo}</td>
                    <td>${displayDate}</td>
                    <td>${bill.customer?.name || 'N/A'}</td>
                    <td>${bill.grandTotal}</td>
                    <td class="actions">
                        <button onclick="printBill('${bill._id}')">Print</button>
                        <button onclick="editBill('${bill._id}')">Edit</button>
                        <button onclick="deleteBill('${bill._id}')">Delete</button>
                    </td>
                `;
                        tbody.appendChild(row);
                    });
                } else {
                    tbody.innerHTML = '';
                    noRecordsDiv.style.display = 'block';
                }
            } catch (error) {
                Swal.fire({
                    ...swalConfig,
                    icon: 'error',
                    title: 'Error',
                    text: 'Unable to fetch bills. Please try again!',
                });
            }
        }


        function printBill(billId) {
            Swal.fire({
                icon: 'info',
                title: 'Redirecting to Print Bill Page',
                text: `You will be redirected to the page for Invoice No: ${billId} to print it.`,
                showCancelButton: true,
                confirmButtonText: 'Yes, Redirect!',
                cancelButtonText: 'No, Cancel',
            }).then((result) => {
                if (result.isConfirmed) {
                    // Redirect to the print page
                    window.location.href = `/print-non-gst-bill/${billId}`;
                }
            });
        }




        // Edit a bill with confirmation popup
        function editBill(billId) {
            Swal.fire({
                title: 'Are you sure?',
                text: 'Do you want to edit this bill?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, edit it!',
                cancelButtonText: 'No, cancel!',
            }).then((result) => {
                if (result.isConfirmed) {
                    // If the user confirms, redirect to the edit page
                    window.location.href = `/edit-non-gst-bill/${billId}`;
                }
            });
        }


        // Delete a bill
        function deleteBill(billId) {
            Swal.fire({
                title: 'Delete Bill',
                text: 'Are you sure you want to delete this bill?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes, Delete!',
                cancelButtonText: 'No, Keep It',
            }).then(async (result) => {
                if (result.isConfirmed) {
                    try {
                        const response = await fetch(`/delete-non-gst-bill/${billId}`, { method: 'DELETE' });

                        if (!response.ok) {
                            throw new Error('Error deleting bill');
                        }

                        const data = await response.json();
                        if (data.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Deleted',
                                text: data.message,
                            });
                            fetchBills();  // Refresh the list of bills
                        } else {
                            throw new Error('Error deleting bill');
                        }
                    } catch (error) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'Unable to delete bill. Please try again!',
                        });
                    }
                }
            });
        }

        // Apply filters using Swal
        function applyFilters() {
            const startDate = document.getElementById('start-date')?.value;
            const endDate = document.getElementById('end-date')?.value;
            const customerName = document.getElementById('customer-name')?.value;

            const filters = { startDate, endDate, customerName };

            Swal.fire({
                ...swalConfig,
                title: 'Loading...',
                text: 'Applying filters, please wait.',
                allowOutsideClick: false,
                didOpen: () => {
                    Swal.showLoading();
                    fetchBills(filters).then(() => Swal.close());
                },
            });
        }


        // Initial fetch of all bills when the page loads
        document.addEventListener('DOMContentLoaded', () => fetchBills());

    </script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.0/dist/sweetalert2.all.min.js"></script>

</body>

</html>